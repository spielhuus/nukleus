# .github/workflows/app.yaml
name: nukleus
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    services:
      db_service:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

#      - name: Install pipenv
#        run: |
#          python -m pip install --upgrade pipenv wheel
#
#      - id: cache-pipenv
#        uses: actions/cache@v1
#        with:
#          path: ~/.local/share/virtualenvs
#          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install native dependencies
#        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          sudo apt-get install -y -qq build-essential libgirepository1.0-dev libcairo2 libpangocairo

      - name: Install dependencies
#        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pip install -r requirements.txt

      - name: Run test suite
        run: |
          python3 -m unittest discover -s src/test

#      - name: Run linter
#        run: |
#          pipenv run lint

#      - name: Run formatting check
#        run: |
#          pipenv run format --check

      - name: Setup node.js (for pyright)
        uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: Run type checking
        run: |
          pyright src/nukleus
